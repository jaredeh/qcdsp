# Default base image
ARG BASE_IMAGE=ubuntu:22.04

# To alter the base image, pass in a different image name to the build command:
#   docker build --build-arg BASE_IMAGE=ubuntu:20.04 .
FROM ${BASE_IMAGE}

# Install necessary dependencies


###########################################################
## Copy the sdkmanager for Android stuff
###########################################################
ARG ANDROID_SDK_ROOT=/opt/Android/Sdk

WORKDIR /opt
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
    && apt-get remove -y \
      openjdk-11-jdk \
      default-jre \
    && apt-get autoremove -y \
    && apt-get install -y \
      unzip \
      openjdk-21-jdk \
    && rm -rf /var/lib/apt/lists/*
COPY downloads/commandlinetools-linux-11076708_latest.zip .
RUN unzip commandlinetools-linux-11076708_latest.zip \
    && rm commandlinetools-linux-11076708_latest.zip \
    && mkdir -p ${ANDROID_SDK_ROOT} \
    && yes | /opt/cmdline-tools/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --licenses \
    && /opt/cmdline-tools/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} \
      "platform-tools" \
      "build-tools;35.0.0" \
      "ndk;27.0.12077973"
ENV ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}
ENV ANDROID_HOME=${ANDROID_SDK_ROOT}
# Set environment variables for the Android SDK
ENV PATH=$PATH:/opt/cmdline-tools/bin
ENV PATH=$PATH:${ANDROID_SDK_ROOT}/platform-tools
ENV ANDROID_ADB_SERVER_ADDRESS=host.docker.internal
#ENV ANDROID_ROOT_DIR
# Run docker container with --add-host=host.docker.internal:host-gateway
# On host run the following to bind to all networks:
#    adb kill-server
#    adb -a -P 5037 start-server

# Set the working directory
WORKDIR /app
